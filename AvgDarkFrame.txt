import rawpy
import numpy as np
import os
from PIL import Image

def average_raw_images(folder_path):
    # Initialize an empty array to store the sum of pixel values
    sum_image = None
    
    # Get a list of all files in the folder
    files = os.listdir(folder_path)
    
    # Filter the list to only include RAW image files
    raw_files = [f for f in files if f.lower().endswith('.raw')]
    
    # Loop through each RAW file
    for file in raw_files:
        # Construct the full path to the file
        path = os.path.join(folder_path, file)
        
        # Read the RAW image
        with rawpy.imread(path) as raw:
            # Get the RGB values of the image
            rgb = raw.postprocess()
            
            # If this is the first image, initialize the sum_image array
            if sum_image is None:
                sum_image = np.zeros_like(rgb, dtype=np.float64)
            
            # Add the pixel values to the sum_image array
            sum_image += rgb
    
    # Calculate the average pixel values by dividing by the number of images
    avg_image = sum_image / len(raw_files)
    
    # Convert the averaged image to a PIL Image object
    avg_pil_image = Image.fromarray(np.uint8(avg_image))
    
    # Save the averaged image as a JPEG file in the same folder
    avg_pil_image.save(os.path.join(folder_path, 'avg_dark.jpg'))
    
    return avg_image